application "Image" {
    vendor "MU"
    author "Michael Ueberschaer"
    email "kontakt@webdesign-in-bremen.com"
    url "http://www.webdesign-in-bremen.com"
    version "1.4.0"
    prefix "muimage"
    generatorSettings {
        settingsContainer "Einstellungen"
        targetCoreVersion ZK14
        generateMailzApi false
        generateModerationBlock false
        generateNewsletterPlugin false
        generatePendingContentSupport false
        generateAtomTemplates false
        generateCsvTemplates false
        generateXmlTemplates false
        generateJsonTemplates false
        generateKmlTemplates false
        generateIcsTemplates false
        generateOnlyBaseClasses false
        versionAllGeneratedFiles false
        generatePoweredByBacklinksIntoFooterTemplates false
        generateTests false
        writeModelToDocs true
        skipFiles "Resources/public/images/admin.png"
        markFiles ""
    }
    entities {
        entity "album" leading categorisable {
            nameMultiple "albums"
            displayPattern "#title#"
            fields {
                string "title" unique,
                text "description" {
                    mandatory false
                },
                integer "parent_id" nullable {
                    dbName "parent_id" defaultValue ""
                    mandatory false
                },
                list "albumAccess" {
                    items {
                        listItem  "All" ( "all" ),
                        listItem  "Users" ( "users" ) { documentation "only registered users" image "only registered users" },
                        listItem  "Friends" ( "friends" ),
                        
                    listItem  "knownPassword" ( "known" )
                    }
                },
                string "passwordAccess" password {
                    mandatory false
                },
                string "myFriends" {
                    mandatory false
                },
                boolean "notInFrontend" {
                    defaultValue ""
                    mandatory false
                }
            }
            actions {
                mainAction "Main",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "picture" {
            nameMultiple "pictures"
            displayPattern "#title#"
            fields {
                string "title" {
                    defaultValue ""
                    mandatory false
                },
                text "description" {
                    defaultValue ""
                    mandatory false
                },
                upload "imageUpload" {
                    maxSize ""
                    minWidth 400
                    maxWidth 1000
                    minHeight 400
                    maxHeight 1000
                detectCorrupted true
                },
                integer "imageView" {
                    defaultValue "0"
                    mandatory false
                displayType DISPLAY
                },
                boolean "albumImage" {
                    defaultValue ""
                    mandatory false
                },
                integer "pos"
            {
                    defaultValue "0"
                }
            }
            actions {
                mainAction "Main",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        }
    ,
        entity "avatar" categorisable {
            nameMultiple "avatars"
            displayPattern "#title#"
            workflow STANDARD
            skipHookSubscribers true
            fields {
                string "title" {
                    documentation ""
                },
                text "description" nullable {
                    documentation "Here you can enter, for which use cases this avatar is."
                    mandatory false
                },
                upload "avatarUpload" {
                    maxSize ""
                    minWidth 200
                    maxWidth 200
                    minHeight 400
                    maxHeight 400
                    allowLandscape false
                    allowPortrait false
                detectCorrupted true
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        }
    }
    relations {
        one2many bidirectional {
            source "album"
            sourceAlias "album"
            sourceField "parent_id"
            target "album"
            targetAlias "albums"
        },
        
    one2many bidirectional {
            source "album"
            sourceAlias "album"
            target "picture"
            targetAlias "pictures"
        }
    }
    variables {
        varContainer "General" {
            vars {
                boolVar "supportCategories" ,
                boolVar "supportSubAlbums" , boolVar "userDeletePictures" {
                    value ""
                }
            ,
                boolVar "useAvatars",
                boolVar "slideshow1"
            }
        },
        varContainer "Slideshows" {
            sortOrder 4
            vars {
                intVar "slide1Interval" {
                    value "4000"
                },
                intVar "slide1Speed" {
                    value "1000"
                }
            }
        }
    , varContainer "uploadHandler" { sortOrder 3 vars {
                intVar "fileSize" {
                    value "102400"
                }, intVar"minWidth" {
                    value "400"
                }, intVar"maxWidth", intVar"maxHeight", intVar "firstWidth" , intVar "firstHeight" , intVar "secondWidth" , intVar "secondHeight" , intVar "thirdWidth" , intVar "thirdHeight" ,  boolVar "fileNameForTitle" } } ,
        varContainer "Avatars" {
            sortOrder 5
            vars {
                intVar "numberOf"
            {
                    value "2"
                },
                textVar "configAvatarWidthAndHeight" {
                    value "200,200;400,400"
                }
            }
        }
    ,
        varContainer "DisplaySettings" {
            sortOrder 2
            vars {
                intVar "albumEntriesPerPageInBackend" {
                    value "10"
                },
                intVar "pictureEntriesPerPageInBackend" {
                    value "10"
                },
                intVar "avatarEntriesPerPageInBackend",
                boolVar "countImageView" {
                    value "1"
                },
                intVar "numberParentAlbums" {
                    documentation "How many main albums may a user create"
                    value "1"
                },
                intVar "numberSubAlbums" {
                    documentation "How many sub albums may a user create"
                    value "2"
                },
                intVar "numberPictures" {
                    documentation "How many pictures may a user create"
                    value "20"
                },
                listVar "groupForCommonAlbums" { items { listVarItem default "None" } } ,
                listVar "kindOfShowSubAlbums" { items {  listVarItem "Links" ,  listVarItem default "Panel" } } ,
                boolVar "breadcrumbsInFrontend" ,
                textVar "ending" {
                    value "html"
                }
            }
        }
    }
    controllers {
        adminController "Admin" {
            actions {
                mainAction "Main"
            }
        },
        userController "User" {
            actions {
                mainAction "Main"
            }
        },
        ajaxController "Ajax" {
            actions {
                mainAction "Main"
            }
        }
    ,
        customController "MyController" {
            actions {
                customAction "zipUpload",
                customAction "multiUpload"
            }
        }
    }
}