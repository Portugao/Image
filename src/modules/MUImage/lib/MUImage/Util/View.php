<?php
/**
 * MUImage.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUImage
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Sat Feb 18 18:42:39 CET 2012.
 */

/**
 * Utility implementation class for view helper methods.
 */
class MUImage_Util_View extends MUImage_Util_Base_View
{
	/**
	 *
	 * Returning the step of import
	 */
	public static function getStep() {
		$view = new Zikula_Request_Http();
		$step = $view->getGet()->filter('step', 'first', FILTER_SANITIZE_STRING);

		return $step;
	}

	/**
	 *
	 * Returning the albums
	 */

	public static function getAlbums() {

		$repository = MUImage_Util_Model::getAlbumRepository();
		$albums = $repository->selectWhere();

		return $albums;
	}

	/**
	 * Counting pictures of an album
	 */

	public static function countAlbumPictures($albumid) {

		$view = new Zikula_Request_Http();
		$id = (int) $view->getGet()->filter('id', 0, FILTER_SANITIZE_STRING);
		$where = 'tbl.album_id = \'' . DataUtil::formatForStore($id) . '\'';

		$repository = MUImage_Util_Model::getAlbumRepository();
		$album = $repository->selectById();

		/*foreach ($album[picture] as $value) {
		 $pictures[] = $value;
		 }*/
		//$count = count($album[picture]);
		$count = 0;

		//LogUtil::registerStatus($album);

		return $count;
	}

	/**
	 *
	 * Counting of total pictures
	 */
	public static function countPictures()
	{
			
		$view = new Zikula_Request_Http();
		$id = (int) $view->getGet()->filter('id', 0, FILTER_SANITIZE_STRING);
		if ($id != 0) {

			$where = 'tbl.album_id = \'' . DataUtil::formatForStore($id) . '\'';

			$repository = MUImage_Util_Model::getPictureRepository();
			$count = $repository->selectCount();
		}
		return $count;
	}

	/**
	 *
	 * Counting of total albums
	 */
	public static function countAlbums()
	{
			
		$view = new Zikula_Request_Http();
		$id = (int) $view->getGet()->filter('id', 0, FILTER_SANITIZE_STRING);
		if ($id != 0) {

			$where = 'tbl.album_id = \'' . DataUtil::formatForStore($id) . '\'';

			$repository = MUImage_Util_Model::getAlbumRepository();
			$count = $repository->selectCount();
		}
		return $count;
	}

	/**
	 *
	 */
	public static function otherUserMainAlbums() {
		$numberMainAlbums = ModUtil::getVar('MUImage', 'numberParentAlbums');
		if ($numberMainAlbums != '') {
			$uid = UserUtil::getVar('uid');
			$gid = UserUtil::getGroupsForUser($uid);
			if (in_array(2, $gid)) {
				return true;
			}
			else {
				$albumrepository = MUImage_Util_Model::getAlbumRepository();
				$where = 'tbl.createdUserId = \'' . DataUtil::formatForStore($uid) . '\'';
				$where .= ' AND ';
				$where .= 'tbl.parent_id IS NULL';
				$albumcount = $albumrepository->selectCount($where);
				if ($albumcount < $numberMainAlbums) {
					return true;
				}
				else {
					return false;
				}
			}
		}
		else {
			return true;
		}
	}

	/**
	 *
	 */
	public static function otherUserSubAlbums() {
		$numberSubAlbums = ModUtil::getVar('MUImage', 'numberSubAlbums');
		if ($numberSubAlbums != '') {
			$uid = UserUtil::getVar('uid');
			$gid = UserUtil::getGroupsForUser($uid);
			if (in_array(2, $gid)) {
				return true;
			}
			else {
				$albumrepository = MUImage_Util_Model::getAlbumRepository();
				$where = 'tbl.createdUserId = \'' . DataUtil::formatForStore($uid) . '\'';
				$where .= ' AND ';
				$where .= 'tbl.parent_id > 0';
				$subalbumcount = $albumrepository->selectCount($where);
				if ($subalbumcount < $numberSubAlbums) {
					return true;
				}
				else {
					return false;
				}
			}
		}
		else {
			return true;
		}
	}

	/**
	 *
	 */
	public static function otherUserPictures() {
		$numberPictures = ModUtil::getVar('MUImage', 'numberPictures');
		if ($numberPictures != '') {
			$uid = UserUtil::getVar('uid');
			$gid = UserUtil::getGroupsForUser($uid);
			if (in_array(2, $gid)) {
				return true;
			}
			else {

				$picturerepository = MUImage_Util_Model::getPictureRepository();
				$where = 'tbl.createdUserId = \'' . DataUtil::formatForStore($uid) . '\'';
				$picturecount = $picturerepository->selectCount($where);
				if ($picturecount < $numberPictures) {
					return true;
				}
				else {
					return false;
				}
			}
		}
		else {
			return true;
		}
	}

}
