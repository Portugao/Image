
<?php
/**
 * MUImage.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUImage
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Thu Feb 23 22:43:24 CET 2012.
 */

/**
 * Configuration handler base class
 */
class MUImage_Form_Handler_Admin_Base_Import extends Zikula_Form_AbstractHandler
{
	/**
	 * Post construction hook.
	 *
	 * @return mixed
	 */
	public function setup()
	{
	}

	/**
	 * Initialize form handler.
	 *
	 * This method takes care of all necessary initialisation of our data and form states.
	 *
	 * @return boolean False in case of initialization errors, otherwise true.
	 */
	public function initialize(Zikula_Form_View $view)
	{
		// permission check
		if (!SecurityUtil::checkPermission('MUImage::', '::', ACCESS_ADMIN)) {
			return $view->registerError(LogUtil::registerPermissionError());
		}

		// custom initialisation aspects
		$this->initializeAdditions();

		// everything okay, no initialization errors occured
		return true;
	}

	/**
	 * Method stub for own additions in subclasses.
	 */
	protected function initializeAdditions()
	{
		$view = new Zikula_Request_Http();
		$step = $view->getGet()->filter('step', 'first', FILTER_SANITIZE_STRING);

		if ($step == 'first') {
		$modules = ModUtil::apiFunc($this->name, 'import', 'getModules');
		
		$supportedmodules = array();
		
		foreach($modules as $module => $value) {
			$supportedmodules[] = array('value' => $value, 'text' => $value);
		}

		$import = $this->view->get_template_vars('import');
		$import['moduleItems'] = $supportedmodules;
		$this->view->assign('import', $import);
		}
			
		if ($step == 'albums') {
		// call api for albums
		$albums = ModUtil::apiFunc($this->name, 'import', 'getAlbumNames', array('module' => 'mediashare'));

		$modulealbums = array();

		foreach($albums as $album => $value) {
			$modulealbums[] = array('value' => $value, 'text' => $value);
		}

		$album = $this->view->get_template_vars('album');
		$import['albumItems'] = $modulealbums;
		$this->view->assign('album', $album);
		}
	}

	/**
	 * Pre-initialise hook.
	 *
	 * @return void
	 */
	public function preInitialize()
	{
	}

	/**
	 * Post-initialise hook.
	 *
	 * @return void
	 */
	public function postInitialize()
	{
	}

	/**
	 * Command event handler.
	 *
	 * This event handler is called when a command is issued by the user. Commands are typically something
	 * that originates from a {@link Zikula_Form_Plugin_Button} plugin. The passed args contains different properties
	 * depending on the command source, but you should at least find a <var>$args['commandName']</var>
	 * value indicating the name of the command. The command name is normally specified by the plugin
	 * that initiated the command.
	 * @see Zikula_Form_Plugin_Button
	 * @see Zikula_Form_Plugin_ImageButton
	 */
	public function handleCommand(Zikula_Form_View $view, &$args)
	{
		if ($args['commandName'] == 'start') {
			// check if all fields are valid
			if (!$this->view->isValid()) {
				return false;
			}

			// retrieve form data
			$data = $this->view->getValues();
			
			// call api for import

			// update all module vars
		/*	if (!ModUtil::setVars('MUImage', $data['config'])) {
				return LogUtil::registerError($this->__('Error! Failed to start the import.'));
			}

			LogUtil::registerStatus($this->__('Done! Module import complete.'));*/
		} else if ($args['commandName'] == 'cancel') {
			// nothing to do there
		}

		// redirect back to the config page
		$url = ModUtil::url('MUImage', 'admin', 'album');
		return $this->view->redirect($url);
	}
}
