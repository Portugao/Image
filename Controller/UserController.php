<?php
/**
 * MUImage.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace MU\MUImageModule\Controller;

use MU\MUImageModule\Controller\Base\UserController as BaseUserController;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;

/**
 * User controller class providing navigation and interaction functionality.
 */
class UserController extends BaseUserController
{
    /**
     * This is the default action handling the main area called without defining arguments.
     *
     * @Route("/user",
     *        methods = {"GET"}
     * )
     *
     * @param Request  $request      Current request instance.
     *
     * @return mixed Output.
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions.
     */
    public function indexAction(Request $request)
    {
        return parent::indexAction($request);
    }

    /**
     * This is a custom action.
     *
     * @Route("/user/zipUpload",
     *        methods = {"GET", "POST"}
     * )
     *
     * @param Request  $request      Current request instance.
     *
     * @return mixed Output.
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions.
     */
    public function zipUploadAction(Request $request)
    {
        return parent::zipUploadAction($request);
    }

    /**
     * This is a custom action.
     *
     * @Route("/user/multiUpload",
     *        methods = {"GET", "POST"}
     * )
     *
     * @param Request  $request      Current request instance.
     *
     * @return mixed Output.
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions.
     */
    public function multiUploadAction(Request $request)
    {
        return parent::multiUploadAction($request);
    }

    /**
     * This is a custom action.
     *
     * @Route("/user/external",
     *        methods = {"GET", "POST"}
     * )
     *
     * @param Request  $request      Current request instance.
     *
     * @return mixed Output.
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions.
     */
    public function externalAction(Request $request)
    {
        return parent::externalAction($request);
    }

    /**
     * This is a custom action.
     *
     * @Route("/user/editMulti",
     *        methods = {"GET", "POST"}
     * )
     *
     * @param Request  $request      Current request instance.
     *
     * @return mixed Output.
     *
     * @throws AccessDeniedException Thrown if the user doesn't have required permissions.
     */
    public function editMultiAction(Request $request)
    {
        return parent::editMultiAction($request);
    }

    // feel free to add your own controller methods here
}
