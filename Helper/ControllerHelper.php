<?php

/**
 * Image.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */
namespace MU\ImageModule\Helper;

use MU\ImageModule\Helper\Base\AbstractControllerHelper;
use ModUtil;
use UserUtil;

/**
 * Helper implementation class for controller layer methods.
 */
class ControllerHelper extends AbstractControllerHelper {
	
	/**
	 * The muimageCheckGroupMember method is checking if the actual user
	 * is in the same group as user created the relevant item
	 *
	 * @param unknown $createdBy        	
	 */
	public function checkGroupMember($createdBy) {
		if (\UserUtil::isLoggedIn () === false) {
			return false;
		}
		$uid = \UserUtil::getVar ( 'uid' );
		$uidGroups = \UserUtil::getGroupListForUser ( $uid );
		$uidGroups = explode ( ',', $uidGroups );
		
		$createdUserIdGroups = \UserUtil::getGroupListForUser ( $createdBy );
		$createdUserIdGroups = explode ( ',', $createdUserIdGroups );
		
		if ($uid == $createdBy) {
			return true;
		}
		
		$commonGroup = \ModUtil::getVar ( 'MUImage', 'groupForCommonAlbums' );
		
		if ($commonGroup != 'notset') {
			foreach ( $uidGroups as $uidGroup ) {
				if ($uidGroup == 2) {
					return true;
				}
				if (in_array ( $uidGroup, $createdUserIdGroups )) {
					if ($uidGroup > 2) {
						return true;
					}
				}
			}
		} else {
			foreach ( $uidGroups as $uidGroup ) {
				if ($uidGroup == 2) {
					return true;
				}
			}
		}
		
		return false;
	}
	
	
	public function checkAlbumAccess($albumid) 
	{
		// we get the actual user id
		$userid = UserUtil::getVar('uid');
		
		$albumrepository = MUImage_Util_Model::getAlbumRepository();
		$thisAlbum = $albumrepository->selectById($albumid);
		
		$groupMember = self::checkGroupMember($thisAlbum['createdBy']);
		if ($groupMember == 1) {
			return 1;
		}
		
		if ($thisAlbum['notInFrontend'] == 1 && $thisAlbum['createdBy'] != $userid) {
			return 0;
		}
		if ($thisAlbum['albumAccess'] == 'all' ) {
			return 1;
		}
		if ($thisAlbum['albumAccess'] == 'users' && UserUtil::isLoggedIn() === true) {
			return 1;
		}
		if ($thisAlbum['albumAccess'] == 'friends') {
			 
			if ($thisAlbum['createdBy'] == $userid) {
				return 1;
			}
			$friends = explode(',', $thisAlbum['myFriends']);
			if (is_array($friends)) {
				foreach ($friends as $friend) {
					$friendIds[] = UserUtil::getIdFromName($friend);
				}
			}
			if (is_array($friendIds)) {
				if (in_array($userid, $friendIds)) {
					return 1;
				}
			}
		}
		if ($thisAlbum['albumAccess'] == 'known') {
			$userid = UserUtil::getVar('uid');
			if ($thisAlbum['createdUserId'] == $userid) {
				return 1;
			} else {
				$passwordArray = SessionUtil::getVar('muimagePasswordArray');
				if (is_array($passwordArray)) {
					foreach ($passwordArray as $key => $password) {
						if ($key == $thisAlbum['id'] && $password == $thisAlbum['passwordAccess']) {
							return 1;
						}
					}
					return 2;
		
				} else {
					return 2;
				}
			}
		}
		
		return false;		
	}
	
	public function giveImageOfAlbum($albumid)
	{
		$repository = MUImage_Util_Model::getPictureRepository();
		$where = 'tbl.album = ' . DataUtil::formatForStore($albumid);
		$where .= ' AND ';
		$where .= 'tbl.albumImage = 1';
		$pictures = $repository->selectWhere($where);
		
		if (count($pictures) == 0) {
			$where = 'tbl.album = ' . DataUtil::formatForStore($albumid);
			$pictures = $repository->selectWhere($where);
		}
		
		if (array_key_exists('assign', $params)) {
			$view->assign($params['assign'], $pictures[0]);
			return;
		}
		return $pictures[0];
	}
}
