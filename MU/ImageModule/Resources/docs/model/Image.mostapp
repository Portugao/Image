application "Image" targets ZK15  {
    vendor "MU"
    author "Michael Ueberschaer"
    email "info@homepages-mit-zikula.de"
    url "https://homepages-mit-zikula.de"
    version "1.4.0"
    prefix "image"
    generateMailzApi false
    generateModerationBlock true
    generateNewsletterPlugin false
    generatePendingContentSupport true
    generateAtomTemplates false
    generateCsvTemplates false
    generateXmlTemplates false
    generateJsonTemplates false
    generateKmlTemplates false
    generateIcsTemplates false
    generateOnlyBaseClasses false
    versionAllGeneratedFiles false
    generatePoweredByBacklinksIntoFooterTemplates false
    generateTests false
    writeModelToDocs true
    skipFiles "README.md,\r\n.gitignore,\r\nResources/public/images/admin.png"
    markFiles "ImageModuleInstaller.php,\r\nContainer/LinkContainer.php,\r\nController/AjaxController.php,\r\nController/AvatarController.php,\r\nController/PictureController.php,\r\nEntity/Repository/AlbumRepository.php,\r\nForm/Type/AlbumType.php,\r\nHelper/ControllerHelper.php,\r\nHelper/UploadHelper.php,\r\nHelper/ViewHelper.php,\r\nResources/config/helpers.yml,\r\nResources/config/twig.yml,\r\nResources/views/helper/includeCategoriesDisplay.html.twig,\r\nResources/public/css/style.css,\r\nResources/views/Album/display.html.twig,\r\nResources/views/Album/edit.html.twig,\r\nResources/views/Album/view.html.twig,\r\nResources/views/Avatar/view.html.twig,\r\nResources/views/Config/config.html.twig,\r\nResources/views/Picture/includeDisplayItemListMany.html.twig,\r\nTwig/TwigExtension.php"
    entities {
        entity "album" leading categorisable {
            nameMultiple "albums"
            displayPattern "#title#"
            fields {
                string "title" unique translatable,
                text "description" translatable {
                    mandatory false
                },
                integer "parent_id" nullable {
                    dbName "parent_id" defaultValue ""
                    mandatory false
                },
                list "albumAccess" {
                    items {
                        listItem  "All" ( "all" ),
                        listItem  "Users" ( "users" ) { documentation "only registered users" image "only registered users" },
                        listItem  "Friends" ( "friends" ),
                        
                    listItem  "knownPassword" ( "known" )
                    }
                },
                string "passwordAccess"  {
                    mandatory false
                role PASSWORD
                },
                string "myFriends" {
                    mandatory false
                },
                boolean "notInFrontend" ajaxTogglability {
                    defaultValue ""
                    mandatory false
                }
            ,
                integer "pos" {
                    defaultValue "1"
                    visible false
                }
            }
            actions {
                mainAction "Main",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "picture" {
            nameMultiple "pictures"
            displayPattern "#title#"
            fields {
                string "title" translatable {
                    defaultValue ""
                    mandatory false
                },
                text "description" translatable {
                    defaultValue ""
                    mandatory false
                },
                upload "imageUpload" {
                    maxSize "200k"
                    minWidth 400
                    maxWidth 1000
                    minHeight 400
                    maxHeight 1000
                detectCorrupted true
                },
                integer "imageView" {
                    defaultValue ""
                    mandatory false
                displayType DISPLAY
                visible false
                },
                boolean "albumImage" {
                    defaultValue ""
                    mandatory false
                },
                integer "pos"
            {
                    defaultValue "1"
                visible false
                }
            }
            actions {
                mainAction "Main",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        }
    ,
        entity "avatar" categorisable {
            nameMultiple "avatars"
            displayPattern "#title#"
            workflow NONE
            skipHookSubscribers true
            fields {
                string "title" {
                    documentation ""
                },
                text "description" nullable {
                    documentation "Here you can enter, for which use cases this avatar is."
                    mandatory false
                },
                upload "avatarUpload" {
                    maxSize "100k"
                    minWidth 200
                    maxWidth 600
                    minHeight 200
                    maxHeight 600
                    allowLandscape false
                    allowPortrait false
                detectCorrupted true
                },
                list "supportedModules" multiple {
                    documentation "Be sure that you set the supported module in a logic way!"
                    defaultValue ""
                    items {
                        
                    listItem   "All" ( "all" ),
                        listItem "MUImageModule" ( "MUImageModule" )
                    }
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        }
    }
    relations {
        one2many bidirectional {
            source "album"
            sourceAlias "album"
            sourceField "parent_id"
            target "album"
            targetAlias "albums"
        },
        
    one2many bidirectional {
            source "album"
            sourceAlias "album"
            target "picture"
            targetAlias "pictures"
        orderBy "pos"
        }
    }
    variables {
        varContainer  "General" {
            fields {
                boolean  "supportCategoriesForAlbums" {
                    mandatory false
                },
                boolean  "supportCategoriesForAvatars" {
                    mandatory false
                }, 
                boolean  "supportSubAlbums" {
                    mandatory false
                }, 
                boolean "userDeletePictures" {
                    mandatory false
                },
                boolean "slideshow1" {
                    mandatory false
                },
                boolean "useAvatars" {
                    mandatory false
                },
                boolean "useWatermark" {
                    mandatory false
                },
                boolean "useExtendedFeatures" {
                    documentation "Do you want to support sub albums?\r\nDo you want to limit creating of albums, subalbums or pictures?\r\nDo you want set a group for common albums?\r\nDo you want to give the option to rule the access to albums?\r\nDo you want to use Categories for Albums or Avatars?\r\n\r\nThen you can enable these features here!"
                mandatory false
                }
                }
        },
        varContainer "Slideshows" {
            sortOrder 4
            fields {
                integer "slide1Interval" {
                    defaultValue "4000"
                },
                integer "slide1Speed" {
                    defaultValue "1000"
                }
                }
        } , 
        varContainer "uploadHandler" { 
        sortOrder 3 
        fields {
                integer "numberParentAlbums" {
                    documentation "How many main albums may a user create"
                    defaultValue "1"
                }, 
                integer "numberSubAlbums" {
                    documentation "How many sub albums may a user create"
                    defaultValue "2"
                },
                 integer "numberPictures" {
                    documentation "How many pictures may a user create"
                     defaultValue "20"
                }, 
               string "fileSizeForPictures" {
                     defaultValue "200k"
                },
                 string "fileSizeForAvatars" {
                     defaultValue "200k"
                } , 
                string "fileSizesForZip" {
                     defaultValue "2M"
                },
               integer "minWidthForPictures" {
                     defaultValue "400"
                }, 
                integer "maxWidthForPictures",
                integer "maxHeightForPictures", 
                integer "minWidthForAvatars" , 
                integer "maxWidthForAvatars" ,
                integer  "maxHeightForAvatars" ,
                boolean "createSeveralPictures" {
                    mandatory false
                }, 
                integer "firstWidth" {
                    documentation "Width for the first additional picture"
                }, integer "firstHeight" {
                    documentation "Height for the first additional picture"
                }, integer "secondWidth" {
                    documentation "Width for the second additional picture"
                }, integer "secondHeight" {
                    documentation "Height for the second additional picture"
                }, integer "thirdWidth" {
                    documentation "Width for the third additional picture"
                }, integer "thirdHeight" {
                    documentation "Height for the third additional picture"
                }
                }
        } ,
        varContainer "Avatars" {
            sortOrder 5
            fields {
                string "numberWidthAndNameOfAvatars" {
                    documentation "Here you can set, how many avatar sizes with which name you wish."
                    defaultValue "200,thumb;400,view;600,normal"
                    mandatory false
                }
            ,
                boolean "shrink"
                {
                    mandatory false
                }
            }
        }
    ,
        varContainer "DisplaySettings" {
            sortOrder 2
            fields {
                integer "albumEntriesPerPageInBackend" {
                    documentation "The amount of albums shown per page in the backend"
                    defaultValue "10"
                },
                integer "pictureEntriesPerPageInBackend" {
                    documentation "The amount of pictures shown per page in the backend"
                    defaultValue "10"
                },
                integer "avatarEntriesPerPageInBackend" {
                    documentation "The amount of avatars shown per page in the backend"
                    defaultValue "10"
                },
                boolean "countImageView" {
                    defaultValue "1"
                mandatory false
                },
                list "groupForCommonAlbums" { items { listItem  "None"}  } ,
                list "kindOfShowSubAlbums" { items {  listItem "Links" ,  listItem  "Panel" } } ,
                boolean "breadcrumbsInFrontend" {
                    mandatory false
                },
                string "endingOfUrl"
                {
                    mandatory false
                }
            }
        } ,
        varContainer "watermark" {
            sortOrder 6
            fields {
                string "watermark" {
                    mandatory false
                },
                integer "bottomOfImage" {
                    documentation "If top is set, bottom has no effect"
                mandatory false
                },
                integer "leftSide" {
                    documentation "If left is set, right has no effect"
                mandatory false
                },
                integer "rightSide" {
                    mandatory false
                },
                integer "topOfImage"
        {
                    mandatory false
                }
            }
        }
    }
    }
