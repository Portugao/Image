{# purpose of this template: avatars display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'MUImageModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ avatar|muimagemodule_formattedTitle|default(__('Avatar')) }}{% endblock %}
{% block title %}
    {% set templateTitle = avatar|muimagemodule_formattedTitle|default(__('Avatar')) %}
    {{ templateTitle }}
    {% set itemActions = knp_menu_get('MUImageModule:ItemActionsMenu:menu', [], {entity: avatar, area: routeArea, context: 'display'}) %}
    <div class="dropdown">
        <a id="itemActions{{ avatar.getKey() }}DropDownToggleStart" role="button" data-toggle="dropdown" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:bootstrap_fontawesome.html.twig'}) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="muimagemodule-avatar muimagemodule-display">

    <dl>
        {% if avatar.title is not empty %}
            <dt>{{ __('Title') }}</dt>
            <dd>{{ avatar.title }}</dd>
        {% endif %}
        {% if avatar.description is not empty %}
            <dt>{{ __('Description') }}</dt>
            <dd>{{ avatar.description|safeHtml }}</dd>
        {% endif %}
        {% if avatar.avatarUpload is not empty %}
            <dt>{{ __('Avatar upload') }}</dt>
            <dd>{% if avatar.avatarUploadMeta|default %}
            <a href="{{ avatar.avatarUploadUrl }}" title="{{ avatar|muimagemodule_formattedTitle|e('html_attr') }}"{% if avatar.avatarUploadMeta.isImage %} class="image-link"{% endif %}>
            {% if avatar.avatarUploadMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'avatarAvatarUpload') %}
                <img src="{{ avatar.avatarUpload.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ avatar|muimagemodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ avatar.avatarUploadMeta.size|muimagemodule_fileSize(avatar.avatarUpload.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% endif %}
            </dd>
        {% endif %}
        {% if avatar.supportedModules is not empty %}
            <dt>{{ __('Supported modules') }}</dt>
            <dd>{{ avatar.supportedModules|muimagemodule_listEntry('avatar', 'supportedModules') }}</dd>
        {% endif %}
        
    </dl>

    {% if featureActivationHelper.isEnabled(constant('MU\\ImageModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'avatar') %}
        {{ include('@MUImageModule/Helper/includeCategoriesDisplay.html.twig', {obj: avatar}) }}
    {% endif %}
    {{ include('@MUImageModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: avatar}) }}

</div>
{% endblock %}
