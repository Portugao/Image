<?php
/**
 * Image.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\ImageModule\Helper;

use MU\ImageModule\Helper\Base\AbstractViewHelper;

use Symfony\Component\HttpFoundation\Response;
use Zikula\Core\Response\PlainResponse;


/**
 * Helper implementation class for view layer methods.
 */
class ViewHelper extends AbstractViewHelper
{
    /**
     * Helper method for managing view templates.
     *
     * @param string  $type               Current controller (name of currently treated entity)
     * @param string  $func               Current function (index, view, ...)
     * @param array   $templateParameters Template data
     * @param string  $template           Optional assignment of precalculated template file
     *
     * @return mixed Output
     */
    public function processTemplate($type, $func, array $templateParameters = [], $template = '')
    {
        $templateExtension = $this->determineExtension($type, $func);
        if (empty($template)) {
            $template = $this->getViewTemplate($type, $func);
        }
        
        // special template parameters for album display
        if ($type == 'album' && $func == 'display') {
        	$slideshow = $this->variableApi->get('MUImageModule', 'slideshow1');
        	    $templateParameters['slideshow1'] = $slideshow;
        	    $useTemplate = \SessionUtil::getVar('useTemplate', '');
        	    if ($useTemplate == '') {
        		    $templateParameters['useTemplate'] = '1';
        	    } else {
        		    $templateParameters['useTemplate'] = $useTemplate;
        	    }
        }
    
        if ($templateExtension == 'pdf.twig') {
            $template = str_replace('.pdf', '.html', $template);
    
            return $this->processPdf($templateParameters, $template);
        }
    
        // look whether we need output with or without the theme
        $raw = $this->request->query->getBoolean('raw', false);
        if (!$raw && $templateExtension != 'html.twig') {
            $raw = true;
        }
    
        $output = $this->twig->render($template, $templateParameters);
        $response = null;
        if (true === $raw) {
            // standalone output
            $response = new PlainResponse($output);
        } else {
            // normal output
            $response = new Response($output);
        }
    
        // check if we need to set any custom headers
        switch ($templateExtension) {
            case 'rss.twig':
                $response->headers->set('Content-Type', 'application/rss+xml');
                break;
        }
    
        return $response;
    }
    
    public function template($args)
    {
    	$request = new Zikula_Request_Http();
    	$template = $args['template'];
    	SessionUtil::setVar('template', $template);
    }
}
