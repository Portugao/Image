<?php
/**
 * MUImage.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUImage
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Thu Feb 23 22:43:24 CET 2012.
 */

/**
 * Url router facade implementation class.
 */
class MUImage_RouterFacade extends MUImage_Base_RouterFacade
{
	/**
	 * Constructor.
	 */
	function __construct()
	{
		$displayDefaultEnding = ModUtil::getVar('MUImage', 'ending');
		if ($displayDefaultEnding != '') {
			// nothing to do
		}
		else {
			$displayDefaultEnding = System::getVar('shorturlsext', '');
		}
		// get $displayDefaultEnding as own var
		$this->displayDefaultEnding = $displayDefaultEnding;
		$this->requirements = array(
				'func'          => '\w+',
				'ot'            => '\w+',
				'title'         => '[^/.]+', // title used for slugs ([^/.]+ = all chars except / and .)
				'displayending' => '(?:' . $displayDefaultEnding . '|xml|pdf|json)',
				'viewending'    => '(?:\.csv|\.rss|\.atom|\.xml|\.pdf|\.json)?',
				'id'            => '\d+'
		);

		// initialise and reference router instance
		$this->router = new Zikula_Routing_UrlRouter();

		// add generic routes
		return $this->initUrlRoutes();
	}

	/**
	 * Helper function to route permalinks for different slug types.
	 */
	protected function initRouteForEachSlugType($prefix, $patternStart, $patternEnd, $defaults, $fieldRequirements)
	{
		// entities with unique slug (slug only)
		$this->router->set($prefix . 'a', new Zikula_Routing_UrlRoute($patternStart . ':title.' . $patternEnd, $defaults, $fieldRequirements));
		// entities with non-unique slug (slug and id)
		$this->router->set($prefix . 'b', new Zikula_Routing_UrlRoute($patternStart . ':title.:id.' . $patternEnd, $defaults, $fieldRequirements));
		// entities without slug (id)
		if ($this->displayDefaultEnding == '') {
			$this->router->set($prefix . 'c', new Zikula_Routing_UrlRoute($patternStart . 'id.:id.' . $patternEnd, $defaults, $fieldRequirements));
		}
		else {
			$this->router->set($prefix . 'c', new Zikula_Routing_UrlRoute($patternStart . 'id.:id.' . $patternEnd, $defaults, $fieldRequirements));

		}
	}
}
