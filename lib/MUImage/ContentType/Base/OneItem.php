<?php
/**
 * MUImage.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUImage
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Fri Jan 27 19:27:23 CET 2012.
 */

/**
 * Generic item list content plugin base class
 */
class MUImage_ContentType_Base_OneItem extends Content_AbstractContentType
{
    private $picture;
    private $id;
    private $width;
    private $height;
    private $template;
    
    public function getModule()
    {
        return 'MUImage';
    }
    public function getName()
    {
        return 'OneItem';
    }
    public function getTitle()
    {
        $dom = ZLanguage::getModuleDomain('MUImage');
        return __('MUImage picture', $dom);
    }
    public function getDescription()
    {
        $dom = ZLanguage::getModuleDomain('MUImage');
        return __('Display One MUImage Picture.', $dom);
    }
    public function loadData(&$data)
    {
        if (!isset($data['template'])) {
            $data['template'] = 'oneitem_Picture_display.tpl';
        }
        $this->picture = $data['picture'];
        $this->id = $data['id'];
        $this->width = $data['width'];
        $this->height = $data['height'];
        $this->template = $data['template'];
    }
    public function display()
    {
        $dom = ZLanguage::getModuleDomain('MUImage');
        ModUtil::initOOModule('MUImage');
        $serviceManager = ServiceUtil::getManager();
        $entityManager = $serviceManager->getService('doctrine.entitymanager');
        $repository = $entityManager->getRepository('MUImage_Entity_Picture');
        // get objects from database
        if ($this->picture > 0) {
            $id = $this->picture;
        } else {
            $id = $this->id;
        }
        $selectionArgs = array(
                'ot' => 'picture',
                'id' => $id);
        
        $entity = ModUtil::apiFunc('MUImage', 'selection', 'getEntity', $selectionArgs);
        //$this->view->setCaching(true);
        $data = array('id' => $id, 'width' => $this->width, 'height' => $this->height, 'template' => $this->template);
        // assign block vars and fetched data
        $this->view->assign('vars', $data)
        ->assign('objectType', 'picture')
        ->assign('item', $entity)
        ->assign($repository->getAdditionalTemplateParameters('contentType'));
        $output = '';
        if (!empty($this->template) && $this->view->template_exists('contenttype/' . $this->template)) {
            $output = $this->view->fetch('contenttype/' . $this->template);
        }
        $templateForObjectType = str_replace('oneitem_', 'oneitem_Picture' . '_', $this->template);
        if ($this->view->template_exists('contenttype/' . $templateForObjectType)) {
            $output = $this->view->fetch('contenttype/' . $templateForObjectType);
        } elseif ($this->view->template_exists('contenttype/' . $this->template)) {
            $output = $this->view->fetch('contenttype/' . $this->template);
        } else {
            $output = $this->view->fetch('contenttype/oneitem_Picture_display.tpl');
        }
        return $output;
    }
    public function displayEditing()
    {
        return $this->display();
    }
    public function getDefaultData()
    {
        return array('picture' => null,
                'id' => null,
                'width' => 120,
                'height' => 90,
                'template' => 'oneitem_display.tpl');
    }
    public function startEditing()
    {
        $dom = ZLanguage::getModuleDomain('MUImage');
        array_push($this->view->plugins_dir, 'modules/MUImage/templates/plugins');
    }
}
