<?php
/**
 * MUImage.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace MU\MUImageModule\Form\Base;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Zikula\Common\Translator\TranslatorInterface;
use Zikula\Common\Translator\TranslatorTrait;
use Zikula\ExtensionsModule\Api\VariableApi;

/**
 * Configuration form type base class.
 */
class AppSettingsType extends AbstractType
{
    use TranslatorTrait;

    /**
     * @var VariableApi
     */
    protected $variableApi;

    /**
     * @var array
     */
    protected $modVars;

    /**
     * AppSettingsType constructor.
     *
     * @param TranslatorInterface $translator  Translator service instance.
     * @param VariableApi         $variableApi VariableApi service instance.
     */
    public function __construct(TranslatorInterface $translator, VariableApi $variableApi)
    {
        $this->setTranslator($translator);
        $this->variableApi = $variableApi;
        $this->modVars = $this->variableApi->getAll('MUMUImageModule');
    }

    /**
     * Sets the translator.
     *
     * @param TranslatorInterface $translator Translator service instance.
     */
    public function setTranslator(/*TranslatorInterface */$translator)
    {
        $this->translator = $translator;
    }

    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $this->addGeneralFields($builder, $options);
        $this->addSlideshowsFields($builder, $options);
        $this->addUploadHandlersFields($builder, $options);

        $builder
            ->add('save', 'Symfony\Component\Form\Extension\Core\Type\SubmitType', [
                'label' => $this->__('Update configuration'),
                'icon' => 'fa-check',
                'attr' => [
                    'class' => 'btn btn-success'
                ]
            ])
            ->add('cancel', 'Symfony\Component\Form\Extension\Core\Type\SubmitType', [
                'label' => $this->__('Cancel'),
                'icon' => 'fa-times',
                'attr' => [
                    'class' => 'btn btn-default',
                    'formnovalidate' => 'formnovalidate'
                ]
            ])
        ;
    }

    /**
     * Adds fields for general fields.
     *
     * @param FormBuilderInterface $builder The form builder.
     * @param array                $options The options.
     */
    public function addGeneralFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('pagesize', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Pagesize') . ':',
                'label_attr' => [
                    'class' => 'mumuimagemodule-form-tooltips',
                    'title' => $this->__('Pagesize in adminview')
                ],
                'help' => $this->__('Pagesize in adminview'),
                'required' => false,
                'data' => $this->modVars['pagesize'],
                'empty_data' => '10',
                'attr' => [
                    'title' => $this->__('Enter the pagesize. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('pageSizeAdminAlbums', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Page size admin albums') . ':',
                'required' => false,
                'data' => $this->modVars['pageSizeAdminAlbums'],
                'empty_data' => '10',
                'attr' => [
                    'title' => $this->__('Enter the page size admin albums. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('pageSizeAdminPictures', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Page size admin pictures') . ':',
                'required' => false,
                'data' => $this->modVars['pageSizeAdminPictures'],
                'empty_data' => '10',
                'attr' => [
                    'title' => $this->__('Enter the page size admin pictures. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('showTitle', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Show title') . ':',
                'label_attr' => [
                    'class' => 'mumuimagemodule-form-tooltips',
                    'title' => $this->__('Standard setting for showing a title of an image')
                ],
                'help' => $this->__('Standard setting for showing a title of an image'),
                'required' => false,
                'data' => $this->modVars['showTitle'],
                'empty_data' => '1',
                'attr' => [
                    'title' => $this->__('The show title option.')
                ],
            ])
            ->add('showDescription', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Show description') . ':',
                'label_attr' => [
                    'class' => 'mumuimagemodule-form-tooltips',
                    'title' => $this->__('Standard setting for showing a description of an image')
                ],
                'help' => $this->__('Standard setting for showing a description of an image'),
                'required' => false,
                'data' => $this->modVars['showDescription'],
                'empty_data' => '1',
                'attr' => [
                    'title' => $this->__('The show description option.')
                ],
            ])
            ->add('countImageView', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Count image view') . ':',
                'required' => false,
                'data' => $this->modVars['countImageView'],
                'empty_data' => '1',
                'attr' => [
                    'title' => $this->__('The count image view option.')
                ],
            ])
            ->add('numberParentAlbums', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Number parent albums') . ':',
                'label_attr' => [
                    'class' => 'mumuimagemodule-form-tooltips',
                    'title' => $this->__('How many main albums may a user create')
                ],
                'help' => $this->__('How many main albums may a user create'),
                'required' => false,
                'data' => $this->modVars['numberParentAlbums'],
                'empty_data' => '1',
                'attr' => [
                    'title' => $this->__('Enter the number parent albums. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('numberSubAlbums', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Number sub albums') . ':',
                'label_attr' => [
                    'class' => 'mumuimagemodule-form-tooltips',
                    'title' => $this->__('How many sub albums may a user create')
                ],
                'help' => $this->__('How many sub albums may a user create'),
                'required' => false,
                'data' => $this->modVars['numberSubAlbums'],
                'empty_data' => '2',
                'attr' => [
                    'title' => $this->__('Enter the number sub albums. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('numberPictures', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Number pictures') . ':',
                'label_attr' => [
                    'class' => 'mumuimagemodule-form-tooltips',
                    'title' => $this->__('How many pictures may a user create')
                ],
                'help' => $this->__('How many pictures may a user create'),
                'required' => false,
                'data' => $this->modVars['numberPictures'],
                'empty_data' => '20',
                'attr' => [
                    'title' => $this->__('Enter the number pictures. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('fileSize', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('File size') . ':',
                'required' => false,
                'data' => $this->modVars['fileSize'],
                'empty_data' => '"102400"',
                'attr' => [
                    'title' => $this->__('Enter the file size. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('minWidth', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Min width') . ':',
                'required' => false,
                'data' => $this->modVars['minWidth'],
                'empty_data' => '400',
                'attr' => [
                    'title' => $this->__('Enter the min width. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('maxWidth', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Max width') . ':',
                'required' => false,
                'data' => $this->modVars['maxWidth'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the max width. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('maxHeight', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Max height') . ':',
                'required' => false,
                'data' => $this->modVars['maxHeight'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the max height. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('groupForCommonAlbums', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Group for common albums') . ':',
                'required' => false,
                'data' => $this->modVars['groupForCommonAlbums'],
                'empty_data' => '""',
                'attr' => [
                    'title' => $this->__('Choose the group for common albums.')
                ],'choices' => [
                    $this->__('none') => 'None'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('supportCategories', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Support categories') . ':',
                'required' => false,
                'data' => $this->modVars['supportCategories'],
                'empty_data' => '0',
                'attr' => [
                    'title' => $this->__('The support categories option.')
                ],
            ])
            ->add('supportSubAlbums', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Support sub albums') . ':',
                'required' => false,
                'data' => $this->modVars['supportSubAlbums'],
                'empty_data' => '0',
                'attr' => [
                    'title' => $this->__('The support sub albums option.')
                ],
            ])
            ->add('breadcrumbInFrontend', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Breadcrumb in frontend') . ':',
                'required' => false,
                'data' => $this->modVars['breadcrumbInFrontend'],
                'empty_data' => '0',
                'attr' => [
                    'title' => $this->__('The breadcrumb in frontend option.')
                ],
            ])
            ->add('kindOfShowSubAlbums', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Kind of show sub albums') . ':',
                'required' => false,
                'data' => $this->modVars['kindOfShowSubAlbums'],
                'empty_data' => 'panel',
                'attr' => [
                    'title' => $this->__('Choose the kind of show sub albums.')
                ],'choices' => [
                    $this->__('links') => 'Links'
                    ,$this->__('panel') => 'Panel'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('ending', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Ending') . ':',
                'required' => false,
                'data' => $this->modVars['ending'],
                'empty_data' => 'html',
                'attr' => [
                    'title' => $this->__('Enter the ending.')
                ],'max_length' => 255
            ])
            ->add('userDeletePictures', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('User delete pictures') . ':',
                'required' => false,
                'data' => $this->modVars['userDeletePictures'],
                'empty_data' => '0',
                'attr' => [
                    'title' => $this->__('The user delete pictures option.')
                ],
            ])
        ;
    }

    /**
     * Adds fields for slideshows fields.
     *
     * @param FormBuilderInterface $builder The form builder.
     * @param array                $options The options.
     */
    public function addSlideshowsFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('slideshow1', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Slideshow 1') . ':',
                'required' => false,
                'data' => $this->modVars['slideshow1'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('The slideshow 1 option.')
                ],
            ])
            ->add('slide1Interval', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Slide 1 interval') . ':',
                'required' => false,
                'data' => $this->modVars['slide1Interval'],
                'empty_data' => '4000',
                'attr' => [
                    'title' => $this->__('Enter the slide 1 interval. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
            ->add('slide1Speed', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Slide 1 speed') . ':',
                'required' => false,
                'data' => $this->modVars['slide1Speed'],
                'empty_data' => '1000',
                'attr' => [
                    'title' => $this->__('Enter the slide 1 speed. Only digits are allowed.')
                ],'max_length' => 255,
                'scale' => 0
            ])
        ;
    }

    /**
     * Adds fields for upload handlers fields.
     *
     * @param FormBuilderInterface $builder The form builder.
     * @param array                $options The options.
     */
    public function addUploadHandlersFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('createSeveralPictureSizes', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Create several picture sizes') . ':',
                'required' => false,
                'data' => $this->modVars['createSeveralPictureSizes'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('The create several picture sizes option.')
                ],
            ])
            ->add('widthFirst', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Width first') . ':',
                'required' => false,
                'data' => $this->modVars['widthFirst'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the width first.')
                ],'max_length' => 255
            ])
            ->add('heightFirst', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Height first') . ':',
                'required' => false,
                'data' => $this->modVars['heightFirst'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the height first.')
                ],'max_length' => 255
            ])
            ->add('widthSecond', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Width second') . ':',
                'required' => false,
                'data' => $this->modVars['widthSecond'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the width second.')
                ],'max_length' => 255
            ])
            ->add('heightSecond', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Height second') . ':',
                'required' => false,
                'data' => $this->modVars['heightSecond'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the height second.')
                ],'max_length' => 255
            ])
            ->add('widthThird', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Width third') . ':',
                'required' => false,
                'data' => $this->modVars['widthThird'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the width third.')
                ],'max_length' => 255
            ])
            ->add('heightThird', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Height third') . ':',
                'required' => false,
                'data' => $this->modVars['heightThird'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Enter the height third.')
                ],'max_length' => 255
            ])
            ->add('shrinkPictures', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Shrink pictures') . ':',
                'required' => false,
                'data' => $this->modVars['shrinkPictures'],
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('The shrink pictures option.')
                ],
            ])
            ->add('fileNameForTitle', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('File name for title') . ':',
                'required' => false,
                'data' => $this->modVars['fileNameForTitle'],
                'empty_data' => 'true',
                'attr' => [
                    'title' => $this->__('The file name for title option.')
                ],
            ])
        ;
    }

    /**
     * {@inheritdoc}
     */
    public function getBlockPrefix()
    {
        return 'mumuimagemodule_appsettings';
    }

    /**
     * {@inheritdoc}
     */
    public function getName()
    {
        return $this->getBlockPrefix();
    }
}
